import json
import boto3

def lambda_handler(event, context):
    try:
        # Extract the SNS message from the event
        sns_message = json.loads(event['Records'][0]['Sns']['Message'])

        # Get necessary information from the SNS message
        subject = sns_message.get('Subject', 'AWS Marketplace Event')
        message = sns_message.get('Message', 'Hello from Aws Marketplace.')
        recipients = ["nyarangamarvin@gmail.com"]

        # Send emails to recipients using Amazon SNS
        sns_client = boto3.client('sns')

        for recipient in recipients:
            response = sns_client.publish(
                TopicArn='arn:aws:sns:eu-north-1:622811571324:email_topic',  # Replace with your SNS topic ARN
                Message=message,
                Subject=subject,
                MessageAttributes={
                    'email': {
                        'DataType': 'String',
                        'StringValue': recipient
                    }
                }
            )

            print(f"Email sent to {recipient}. MessageId: {response['MessageId']}")

        # Return a response if needed
        return {
            'statusCode': 200,
            'body': json.dumps('Lambda function executed successfully!')
        }
    except Exception as e:
        # Log any exceptions that occur during execution
        print(f"Error: {str(e)}")
        return {
            'statusCode': 500,
            'body': json.dumps(f'Error: {str(e)}')
        }




TEST SCRIPT

{
  "Records": [
    {
      "EventSource": "aws:sns",
      "EventVersion": "1.0",
      "EventSubscriptionArn": "arn:aws:sns:us-east-1:{{{accountId}}}:ExampleTopic",
      "Sns": {
        "Type": "Notification",
        "MessageId": "95df01b4-ee98-5cb9-9903-4c221d41eb5e",
        "TopicArn": "arn:aws:sns:us-east-1:123456789012:ExampleTopic",
        "Subject": "example subject",
        "Message": "example message",
        "Timestamp": "1970-01-01T00:00:00.000Z",
        "SignatureVersion": "1",
        "Signature": "EXAMPLE",
        "SigningCertUrl": "EXAMPLE",
        "UnsubscribeUrl": "EXAMPLE",
        "MessageAttributes": {
          "Test": {
            "Type": "String",
            "Value": "TestString"
          },
          "TestBinary": {
            "Type": "Binary",
            "Value": "TestBinary"
          }
        }
      }
    }
  ]
}












{
  "Records": [
    {
      "EventSource": "aws:sns",
      "EventVersion": "1.0",
      "EventSubscriptionArn": "arn:aws:sns:region:account-id:topic-name:subscription-id",
      "Sns": {
        "Type": "Notification",
        "MessageId": "message-id",
        "TopicArn": "arn:aws:sns:region:account-id:topic-name",
        "Subject": "AWS Marketplace Entitlement Notification",
        "Message": "{\"customerId\": \"customer-id\", \"productId\": \"product-id\", \"status\": \"subscribed\"}",
        "Timestamp": "timestamp",
        "SignatureVersion": "1",
        "Signature": "signature",
        "SigningCertUrl": "signing-cert-url",
        "UnsubscribeUrl": "unsubscribe-url",
        "MessageAttributes": {
          "key1": {
            "Type": "String",
            "Value": "value1"
          },
          "key2": {
            "Type": "String",
            "Value": "value2"
          }
        }
      }
    }
  ]
}
